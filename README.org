* Jonky - Jari's Conky
** What is it?
   An attempt to make my own conky-like tool. It'll be based on PyCairo and PyGtk. The first cut will:
   - Only allow you to write to the whole desktop
   - Only give basic drawing utilities
     - Text
     - Circles
     - Rectangles
     - Polygons
     - FontAwesome
     - Images/SVGs
     - ?
   - A mechanism to call various functions at various times
   - A mechanism for caching
   - A way to create a live wallpaper that's controlled by time of day
   - A function for adding digital clocks at various timezones
   - Functions for retrieiving system info (disk space, cpu use, ram, etc)
   - Simple time series plots
 
** Why?
   I'm too dumb to configure conky how I like, and I've been making something similar in an ad hoc way using feh. Time to upgrade that to something more real.
   
** Architecture (planning)
*** class Jonky [X]
    - Main entry point
    - Manages references to root window, cairo context, the tick and draw function
    - Does double buffering (?)
    - Must be subclassed to create your own panels
    - Define background color
*** class Drawable [X]
    - Base class for all things that can be drawn
    - Supply =draw= function
    - Define pose in either screen space fractions or pixels
      - (how to convert screen space fractions to pixels?)
**** class Text [X]
     - Initialize with font name, text size (and optional bounds?)
     - Shadow or stoke option?
**** class Image [X]
     - Initialize with a PIL image, or path, or svg (?)
     - resize?
     - filters?
**** class Shape
     - Base class for shapes
     - Give options for fill, stroke
***** class Circle
      - Init with radius + inherit
***** class Rectangle
      - Init with w, h, [rounding radius] + inherit
	